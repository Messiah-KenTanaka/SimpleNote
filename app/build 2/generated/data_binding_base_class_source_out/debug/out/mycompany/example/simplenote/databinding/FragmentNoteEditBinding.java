// Generated by view binder compiler. Do not edit!
package mycompany.example.simplenote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mycompany.example.simplenote.R;

public final class FragmentNoteEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button delete;

  @NonNull
  public final EditText detailEdit;

  @NonNull
  public final View divider;

  @NonNull
  public final Button save;

  @NonNull
  public final EditText titleEdit;

  private FragmentNoteEditBinding(@NonNull ConstraintLayout rootView, @NonNull Button delete,
      @NonNull EditText detailEdit, @NonNull View divider, @NonNull Button save,
      @NonNull EditText titleEdit) {
    this.rootView = rootView;
    this.delete = delete;
    this.detailEdit = detailEdit;
    this.divider = divider;
    this.save = save;
    this.titleEdit = titleEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNoteEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNoteEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_note_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNoteEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete;
      Button delete = rootView.findViewById(id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.detailEdit;
      EditText detailEdit = rootView.findViewById(id);
      if (detailEdit == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = rootView.findViewById(id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.save;
      Button save = rootView.findViewById(id);
      if (save == null) {
        break missingId;
      }

      id = R.id.titleEdit;
      EditText titleEdit = rootView.findViewById(id);
      if (titleEdit == null) {
        break missingId;
      }

      return new FragmentNoteEditBinding((ConstraintLayout) rootView, delete, detailEdit, divider,
          save, titleEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
